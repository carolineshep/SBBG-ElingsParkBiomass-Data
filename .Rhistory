ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw()
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw()
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
#calculating % plants alive in each plot
View(biomass)
View(elings_data)
View(mort_plot)
View(elings_data)
#calculating % plants alive in each plot
tarp_perc <- elings_data %>%
filter(treatment == "tarp") %>%
View(elings_data)
View(mort_plot)
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
elings_data <- read.csv(here("ElingsMonitoringData.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw()
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw()
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw()
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp")
tarp_perc <- sum()
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
View(tarp_filt)
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
sum(sum_all = sum(mortality_status))
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
sum(sum_all = sum(mortality_status, na.rm = TRUE))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
elings_data <- read.csv(here("ElingsMonitoringData.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
sum(sum_all = sum(mortality_status, na.rm = TRUE))
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
sum(sum_all = sum(mortality_status, na.rm = TRUE))
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
summarise(sum_all = sum(mortality_status, na.rm = TRUE))
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
summarise(sum_all = count(mortality_status, na.rm = TRUE))
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status, na.rm = TRUE)
View(tarp_filt)
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status) %>%
na.rm = TRUE
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
View(tarp_filt)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
#calculating % plants alive in each plot
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
View(tarp_filt)
View(mort_treatment)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
View(mulch_filt)
View(mulch_filt)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
tarp_perc = mulch_filt(mortality_status == "A" | )
tarp_perc = count(mulch_filt(mortality_status == "A" | "D"))
tarp_perc = mulch_filt(mortality_status == "A" | "D")
View(tarp_filt)
usethis::use_github()
usethis::use_git()
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
mutate(width1_cm_widest_diameter = width1_cm,
width2_cm_perpendicular_to_w1_measurement = width2_cm)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm_widest_diameter = width1_cm,
width2_cm_perpendicular_to_w1_measurement = width2_cm)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement)
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv"))
View(elings_data)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
View(elings_data)
