labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
tarp_perc = mulch_filt(mortality_status == "A" | )
tarp_perc = count(mulch_filt(mortality_status == "A" | "D"))
tarp_perc = mulch_filt(mortality_status == "A" | "D")
View(tarp_filt)
usethis::use_github()
usethis::use_git()
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
mutate(width1_cm_widest_diameter = width1_cm,
width2_cm_perpendicular_to_w1_measurement = width2_cm)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm_widest_diameter = width1_cm,
width2_cm_perpendicular_to_w1_measurement = width2_cm)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement)
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv"))
View(elings_data)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
View(elings_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names()
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
tarp_perc = (mortality_status == "A" | "D")
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter,
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,
width2_m = width2_cm/100)
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(Type = case_when(species_id == "boba", "brca", "cama", "cofi", "epca", "grca", "leco", "sodo", "spam", "stpu" ~ "pg"))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(Type = case_when(species_id == "boba", "brca", "cama", "cofi", "epca", "grca", "leco", "sodo", "spam", "stpu" ~ "pg"))
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "boba", "brca", "cama", "cofi", "epca", "grca", "leco", "sodo", "spam", "stpu" ~ "pg"))
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == 'boba', 'brca', 'cama', 'cofi', 'epca', 'grca', 'leco', 'sodo', 'spam', 'stpu' ~ 'pg'))
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "boba" | "brca" | "cama" | "cofi" | "epca" | "grca" | "leco" | "sodo" | "spam" | "stpu" ~ "pg"))
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "boba"  ~ "pg"))
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA"  ~ "pg"))
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" | "STPU" ~ "pg"))
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" & "STPU" ~ "pg"))
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "pg",
species_id == "STPU" ~ "pg"))
View(elings_data)
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "pg",
species_id == "STPU" ~ "pg",
species_id == "BRCA" ~ "pg",
species_id == "CAMA" ~ "pg",
species_id == "COFI" ~ "pg",
species_id == "EPCA" ~ "pg",
species_id == "GRCA" ~ "pg",
species_id == "LECO" ~ "pg",
species_id == "SODO" ~ "pg",
species_id == "SPAM" ~ "pg"))
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "srhub",
species_id == "AGSH" ~ "srhub",
species_id == "ARCA" ~ "srhub",
species_id == "ATLE" ~ "srhub",
species_id == "BAPI" ~ "srhub",
species_id == "BEEM" ~ "srhub",
species_id == "ENCA" ~ "srhub",
species_id == "ERFA" ~ "srhub",
species_id == "EUMI" ~ "srhub",
species_id == "HEWH" ~ "srhub",
species_id == "ISME" ~ "srhub",
species_id == "LEGI" ~ "srhub",
species_id == "LYCA" ~ "srhub",
species_id == "MAFA" ~ "srhub",
species_id == "PEAR" ~ "srhub",
species_id == "RHCR" ~ "srhub",
species_id == "RHIN" ~ "srhub",
species_id == "SAAP" ~ "srhub"))
View(elings_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor)
library(tidyverse)
library(here)
library(dplyr)
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData28Feb.csv")) %>% clean_names() %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>%
filter(treatment == "tarp") %>%
count(mortality_status)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(treatment == "mulch") %>%
count(mortality_status)
tarp_perc = (mortality_status == "A" | "D")
