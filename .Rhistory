kable_styling(bootstrap_options = "none")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "striped")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "hover")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling()
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling()bootstrap_options = "hover")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling()bootstrap_options = "none")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "none")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "hover")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "striped")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "hover", "condensed")
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = c("hover", "condensed"))
View(region_filt)
View(province_stpu)
View(region_filt)
View(plot_filt)
plot_filt %>%
kable(caption = "Plot Mortality Status Data",
col.names = c("Plot ID","# Alive Plants","# Dead Plants", "Total","Proportion of plants alive","Proportion of plants dead", "Biomass kg/m2", "Treatment"),
format = "html",table.attr = "style = 'width:80%'") %>%
kable_styling(bootstrap_options = "striped")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor) #helps clean data, idk if it does anything else
library(tidyverse) #helps clean and manipulate data
library(here) #helps read in data
library(dplyr) #helps with data analysis
library(kableExtra) #helps make pretty tables to show data in knitted html or to save as png
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
filter(species_id != "EMPTY") %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
# need to create function to calculate biomass - jk I made it in excel. Still might want to make it in R at some point
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# Chunk 4
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
# Chunk 5
#calculating % plants alive in each plot
#filtering for only tarp treatment to see the total number of plants (both A and D)
tarp_filt <- elings_data %>% #calling on elings_data for the data frame
filter(mortality_status == "D" | mortality_status == "A") %>% #filtering for non-NA values
filter(treatment == "tarp") %>% #filtering for only tarped plants
count(mortality_status) %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total'))) %>%
rename(plant_count = n)
#filtering for only mulch treatment to see the total number of plants (both A and D)
mulch_filt <- elings_data %>%
filter(mortality_status == "D" | mortality_status == "A") %>%
filter(treatment == "mulch") %>%
count(mortality_status) %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total'))) %>%
rename(plant_count = n)
#filtering for mortality data and grouping by plot
plot_filt <- elings_data %>%
group_by(plot_id) %>%
summarise(alive_pl = sum(mortality_status == "A"),
dead_pl = sum(mortality_status == "D"),
total = alive_pl + dead_pl,
alive_prop = alive_pl / total,
dead_prop = dead_pl / total,
biomass = sum(biomass_kg_m2)) %>%
mutate(treatment = case_when(plot_id == "A" ~ "Tarp", # adding a treatment column
plot_id == "B" ~ "Mulch",
plot_id == "C" ~ "Tarp",
plot_id == "D" ~ "Mulch",
plot_id == "E" ~ "Mulch",
plot_id == "F" ~ "Tarp",
plot_id == "G" ~ "Mulch",
plot_id == "H" ~ "Tarp"))
plot_filt %>%
kable(caption = "Plot Mortality Status Data",
col.names = c("Plot ID","# Alive Plants","# Dead Plants", "Total","Proportion of plants alive","Proportion of plants dead", "Biomass kg/m2", "Treatment"),
format = "html",table.attr = "style = 'width:70%'") %>%
kable_styling(bootstrap_options = "striped")
region_filt <- elings_data %>%
group_by(region) %>%
summarise(alive_pl = sum(mortality_status == "A"),
dead_pl = sum(mortality_status == "D"),
total = alive_pl + dead_pl,
alive_prop = alive_pl / total,
dead_prop = dead_pl / total,
biomass = sum(biomass_kg_m2))
province_stpu <- elings_data %>%
filter(province_info == "SB" | province_info == "IRV" | province_info == "SD") %>%
filter(species_id == "STPU") %>%
group_by(province_info) %>%
summarise(alive_pl = sum(mortality_status == "A"),
dead_pl = sum(mortality_status == "D"),
total = alive_pl + dead_pl,
alive_prop = alive_pl / total,
dead_prop = dead_pl / total,
biomass = sum(biomass_kg_m2),
biomass_per_pl = biomass / alive_pl)
province_stpu %>%
kable(caption = "Stipa Pulchra Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total", "Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2", "Biomass kg/m2 per plant"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = "striped")
province_epca <- elings_data %>%
filter(province_info == "SB" | province_info == "IRV" | province_info == "SD") %>%
filter(species_id == "EPCA") %>%
group_by(province_info) %>%
summarise(alive_pl = sum(mortality_status == "A"),
dead_pl = sum(mortality_status == "D"),
total = alive_pl + dead_pl,
alive_prop = alive_pl / total,
dead_prop = dead_pl / total,
biomass = sum(biomass_kg_m2),
biomass_per_pl = biomass / alive_pl)
province_epca %>%
kable(caption = "Epilobium Canum Province Data",
col.names = c("Province Info", "# Alive Plants", "# Dead Plants", "Total","Proportion of plants alive", "Proportion of plants dead", "Biomass kg/m2", "Biomass kg/m2 per plant"),
format = "html", table.attr = "style = 'width:80%;'") %>%
kable_styling(bootstrap_options = c("hover", "condensed"))
# Chunk 6
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor) #helps clean data, idk if it does anything else
library(tidyverse) #helps clean and manipulate data
library(here) #helps read in data
library(dplyr) #helps with data analysis
library(kableExtra) #helps make pretty tables to show data in knitted html or to save as png
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor) #helps clean data, idk if it does anything else
library(tidyverse) #helps clean and manipulate data
library(here) #helps read in data
library(dplyr) #helps with data analysis
library(kableExtra) #helps make pretty tables to show data in knitted html or to save as png
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
filter(species_id != "EMPTY") %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
View(elings_data)
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# read in packages
library(janitor) #helps clean data, idk if it does anything else
library(tidyverse) #helps clean and manipulate data
library(here) #helps read in data
library(dplyr) #helps with data analysis
#library(kableExtra) #helps make pretty tables to show data in knitted html or to save as png
library(janitor) #helps clean data, idk if it does anything else
library(tidyverse) #helps clean and manipulate data
library(here) #helps read in data
library(dplyr) #helps with data analysis
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
filter(species_id != "EMPTY") %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters instead of cm
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
# read in packages
library(janitor) #helps clean data, idk if it does anything else
library(tidyverse) #helps clean and manipulate data
library(here) #helps read in data
library(dplyr) #helps with data analysis
#library(kableExtra) #helps make pretty tables to show data in knitted html or to save as png
# Chunk 3
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
filter(species_id != "EMPTY") %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters instead of cm
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>% clean_names() %>%
filter(species_id != "EMPTY") %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters instead of cm
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv"))
elings_data <- read.csv(here("ElingsMonitoringData25March2024.csv")) %>%
clean_names()
View(elings_data)
# read in the data
# Make sure you have the most updated data
elings_data <- read.csv(here("ElingsMonitoringData_March2024.csv")) %>%
clean_names() %>%
filter(species_id != "EMPTY") %>%
rename(width1_cm = width1_cm_widest_diameter, # changing column names to be less annoying
width2_cm = width2_cm_perpendicular_to_w1_measurement) %>%
mutate(width1_m = width1_cm/100,  #making a width column in meters instead of cm
width2_m = width2_cm/100) %>%
mutate(veg_type = case_when(species_id == "BOBA" ~ "herb",
species_id == "STPU" ~ "herb",
species_id == "BRCA" ~ "herb",
species_id == "CAMA" ~ "herb",
species_id == "COFI" ~ "herb",
species_id == "EPCA" ~ "herb",
species_id == "GRCA" ~ "herb",
species_id == "LECO" ~ "herb",
species_id == "SODO" ~ "herb",
species_id == "SPAM" ~ "herb",
species_id == "ACGL" ~ "shrub",
species_id == "AGSH" ~ "shrub",
species_id == "ARCA" ~ "shrub",
species_id == "ATLE" ~ "shrub",
species_id == "BAPI" ~ "shrub",
species_id == "BEEM" ~ "shrub",
species_id == "ENCA" ~ "shrub",
species_id == "ERFA" ~ "shrub",
species_id == "EUMI" ~ "shrub",
species_id == "HEWH" ~ "shrub",
species_id == "ISME" ~ "shrub",
species_id == "LEGI" ~ "shrub",
species_id == "LYCA" ~ "shrub",
species_id == "MAFA" ~ "shrub",
species_id == "PEAR" ~ "shrub",
species_id == "RHCR" ~ "shrub",
species_id == "RHIN" ~ "shrub",
species_id == "SAAP" ~ "shrub"))
# need to create function to calculate biomass - jk I made it in excel. Still might want to make it in R at some point
# group by plot and sum biomass
biomass_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by plot and sum mortality
# I double checked and this is correctly summing # of alive plants
mort_plot <- elings_data %>%
group_by(plot_id) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# group by treatment and sum biomass
biomass_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(biomass_sum = sum(biomass_kg_m2))
# group by treatment and sum mortality
mort_treatment <- elings_data %>%
group_by(treatment) %>%
summarise(mort_sum = sum(mort_status, na.rm = TRUE))
# explore the data! look at trends!
#graphing biomass by plot
ggplot(data = biomass_plot, aes(x = plot_id, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Biomass (kg/m2)")
# graphing biomass by treatment
ggplot(data = biomass_treatment, aes(x = treatment, y = biomass_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Biomass (kg/m2)")
# graphing mortality by plot
ggplot(mort_plot, aes(x = plot_id, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Plot ID",
y = "Total Number of Live Plants")
# graphing mortality by treatment
ggplot(data = mort_treatment, aes(x = treatment, y = mort_sum)) +
geom_col() +
theme_bw() +
labs(x = "Treatment",
y = "Total Number of Live Plants")
# would like to look at PERCENT plants alive in next analysis
# I also want to look at average biomass per plant per plot
# and average biomass per species per treatment
